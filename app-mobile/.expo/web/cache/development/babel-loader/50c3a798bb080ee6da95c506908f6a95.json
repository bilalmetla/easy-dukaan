{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { get } from \"../services/http\";\n\nvar MyProducts = function MyProducts() {\n  var _useState = useState(initialState),\n      _useState2 = _slicedToArray(_useState, 2),\n      categories = _useState2[0],\n      setcategories = _useState2[1];\n\n  useEffect(function () {\n    fetchCategoriesList().catch(console.log);\n  }, []);\n\n  function fetchCategoriesList() {\n    var businessType, categories;\n    return _regeneratorRuntime.async(function fetchCategoriesList$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            businessType = 'test';\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(get(\"/products/catagories/\" + businessType));\n\n          case 3:\n            categories = _context.sent;\n            setcategories(categories);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return React.createElement(React.Fragment, null, \"hello\");\n};\n\nexport default MyProducts;","map":{"version":3,"sources":["C:/Users/m.bilal/Documents/code/easy-dukaan/mobile-app/src/screens/MyProducts.js"],"names":["React","useState","useEffect","get","MyProducts","initialState","categories","setcategories","fetchCategoriesList","catch","console","log","businessType"],"mappings":";;AACA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;;;;;AAKA,SAASC,GAAT;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAY;AAC3B,kBAAoCH,QAAQ,CAACI,YAAD,CAA5C;AAAA;AAAA,MAAOC,UAAP;AAAA,MAAmBC,aAAnB;;AAEAL,EAAAA,SAAS,CAAC,YAAM;AACZM,IAAAA,mBAAmB,GAAIC,KAAvB,CAA6BC,OAAO,CAACC,GAArC;AACH,GAFQ,EAEN,EAFM,CAAT;;AAKA,WAAeH,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACQI,YAAAA,YADR,GACuB,MADvB;AAAA;AAAA,6CAE2BT,GAAG,2BAAyBS,YAAzB,CAF9B;;AAAA;AAEQN,YAAAA,UAFR;AAGIC,YAAAA,aAAa,CAACD,UAAD,CAAb;;AAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMA,SACI,kDADJ;AAGH,CAjBD;;AAmBA,eAAeF,UAAf","sourcesContent":["\r\nimport React, {useState, useEffect} from 'react';\r\nimport {\r\n  Button, StyleSheet, Text, View,\r\n  ScrollView\r\n} from 'react-native';\r\nimport { get } from \"../services/http\";\r\n\r\nconst MyProducts = function () {\r\n    const [categories, setcategories] = useState(initialState);\r\n\r\n    useEffect(() => {\r\n        fetchCategoriesList ().catch(console.log)\r\n    }, []);\r\n    \r\n\r\n    async function fetchCategoriesList() {\r\n        let businessType = 'test'\r\n        let categories = await get(`/products/catagories/${businessType}`)\r\n        setcategories(categories)\r\n    }\r\n\r\n    return (\r\n        <>hello</>\r\n    )\r\n};\r\n\r\nexport default MyProducts;"]},"metadata":{},"sourceType":"module"}