{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\m.bilal\\\\Documents\\\\code\\\\easy-dukaan-app\\\\App.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState, useEffect } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport LoginStackScreen from \"./src/screens/Login\";\nimport HomeStackScreen from \"./src/screens/Home\";\nvar Drawer = createDrawerNavigator();\nvar Tab = createMaterialTopTabNavigator();\nexport default function App() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLogin = _useState2[0],\n      setisLogin = _useState2[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var isLoggedIn;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(Constants.localStorageKeys.isLogin));\n\n            case 3:\n              isLoggedIn = _context.sent;\n\n              if (isLoggedIn === '1') {\n                setisLogin(true);\n              }\n\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 7]], Promise);\n    })();\n  }, []);\n  return React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, isLogin === false && React.createElement(LoginStackScreen, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }), isLogin === true && React.createElement(Drawer.Navigator, {\n    initialRouteName: \"Home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, React.createElement(Drawer.Screen, {\n    name: \"Home\",\n    component: HomeStackScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/m.bilal/Documents/code/easy-dukaan-app/App.js"],"names":["StatusBar","React","useState","useEffect","NavigationContainer","createDrawerNavigator","createMaterialTopTabNavigator","AsyncStorage","LoginStackScreen","HomeStackScreen","Drawer","Tab","App","isLogin","setisLogin","getItem","Constants","localStorageKeys","isLoggedIn","console","log"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;;;;;AAMA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,qBAAT,QAAsC,0BAAtC;AACA,SAASC,6BAAT,QAA8C,qCAA9C;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AAGA,OAAOC,gBAAP;AACA,OAAOC,eAAP;AAEA,IAAMC,MAAM,GAAGL,qBAAqB,EAApC;AACA,IAAMM,GAAG,GAAGL,6BAA6B,EAAzC;AAEA,eAAe,SAASM,GAAT,GAAe;AAC5B,kBAA8BV,QAAQ,CAAC,KAAD,CAAtC;AAAA;AAAA,MAAOW,OAAP;AAAA,MAAgBC,UAAhB;;AACAX,EAAAA,SAAS,CAAC,YAAM;AACd,KAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAG0BI,YAAY,CAACQ,OAAb,CAAqBC,SAAS,CAACC,gBAAV,CAA2BJ,OAAhD,CAH1B;;AAAA;AAGOK,cAAAA,UAHP;;AAIG,kBAAIA,UAAU,KAAK,GAAnB,EAAwB;AACpBJ,gBAAAA,UAAU,CAAC,IAAD,CAAV;AACH;;AANJ;AAAA;;AAAA;AAAA;AAAA;AASGK,cAAAA,OAAO,CAACC,GAAR;;AATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;AAcD,GAfQ,EAeN,EAfM,CAAT;AAkBA,SACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEGP,OAAO,KAAK,KAAZ,IACC,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAOIA,OAAO,KAAK,IAAZ,IACA,oBAAC,MAAD,CAAQ,SAAR;AAAkB,IAAA,gBAAgB,EAAC,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,MAAD,CAAQ,MAAR;AAAe,IAAA,IAAI,EAAC,MAApB;AAA2B,IAAA,SAAS,EAAEJ,eAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CARJ,CADF;AAkBD","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, {useState, useEffect} from 'react';\nimport {\n  Button, StyleSheet, Text, View,\n  ScrollView\n} from 'react-native';\n\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\n\nimport LoginStackScreen from \"./src/screens/Login\";\nimport HomeStackScreen from \"./src/screens/Home\";\n\nconst Drawer = createDrawerNavigator();\nconst Tab = createMaterialTopTabNavigator();\n\nexport default function App() {\n  const [isLogin, setisLogin] = useState(false);\n  useEffect(() => {\n    (async () => {\n      \n      try {\n        let isLoggedIn = await AsyncStorage.getItem(Constants.localStorageKeys.isLogin)\n        if (isLoggedIn === '1') {\n            setisLogin(true)\n        }\n        \n      } catch (e) { \n        console.log(e)\n      }\n      \n    })()\n    \n  }, []);\n \n\n  return (\n    <NavigationContainer>\n\n      {isLogin === false &&\n        <LoginStackScreen></LoginStackScreen>\n      }\n      \n      {\n        isLogin === true &&\n        <Drawer.Navigator initialRouteName=\"Home\">\n        \n          <Drawer.Screen name=\"Home\" component={HomeStackScreen} />\n      </Drawer.Navigator>\n      }\n      \n    \n    </NavigationContainer>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}