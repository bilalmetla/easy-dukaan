{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\m.bilal\\\\Documents\\\\code\\\\easy-dukaan\\\\mobile-app\\\\src\\\\screens\\\\BusinessTypes.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport RegisteredStores from \"./RegisteredStores\";\nimport { get } from \"../services/http\";\nexport default function BusinessTypes(props) {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      items = _useState2[0],\n      setitems = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      storesList = _useState4[0],\n      setstoresList = _useState4[1];\n\n  useEffect(function () {\n    init().then(console.log);\n  }, []);\n\n  function init() {\n    var data, businessType, stores;\n    return _regeneratorRuntime.async(function init$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(get('/businesses/types'));\n\n          case 3:\n            data = _context.sent;\n\n            if (!data || !data.list) {}\n\n            setitems(data.list || []);\n            businessType = data.list[0].businessType;\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(get(\"/suppliers/\" + businessType));\n\n          case 9:\n            stores = _context.sent;\n            setstoresList(stores);\n            return _context.abrupt(\"return\", {\n              end: true\n            });\n\n          case 14:\n            _context.prev = 14;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 14]], Promise);\n  }\n\n  var handlePressEvent = function handlePressEvent(businessType) {\n    var stores;\n    return _regeneratorRuntime.async(function handlePressEvent$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(get(\"/suppliers/\" + businessType));\n\n          case 2:\n            stores = _context2.sent;\n            setstoresList(stores);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(ScrollView, {\n    horizontal: true,\n    style: styles.horizentalList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 10\n    }\n  }, items.map(function (it) {\n    return React.createElement(TouchableOpacity, {\n      key: it.businessType,\n      onPress: function onPress() {\n        return handlePressEvent(it.businessType);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 29\n      }\n    }, React.createElement(Text, {\n      style: styles.item,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 26\n      }\n    }, it.businessType));\n  })), React.createElement(RegisteredStores, _extends({}, props, {\n    data: storesList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 14\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  horizentalList: {\n    flex: 1,\n    maxHeight: 50\n  },\n  item: {\n    backgroundColor: '#4ae1fa',\n    justifyContent: 'center',\n    alignItems: 'center',\n    textAlign: 'center',\n    margin: 5\n  }\n});","map":{"version":3,"sources":["C:/Users/m.bilal/Documents/code/easy-dukaan/mobile-app/src/screens/BusinessTypes.js"],"names":["React","useState","useEffect","RegisteredStores","get","BusinessTypes","props","items","setitems","storesList","setstoresList","init","then","console","log","data","list","businessType","stores","end","handlePressEvent","styles","horizentalList","map","it","item","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent","maxHeight","textAlign","margin"],"mappings":"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","sourcesContent":["\r\nimport React, {useState, useEffect} from 'react';\r\nimport {\r\n  Button, StyleSheet, Text, View,\r\n    ScrollView,\r\n    TouchableOpacity,\r\n    Animated,\r\n    FlatList, \r\n  Dimensions,\r\n  Alert\r\n} from 'react-native';\r\n\r\n\r\nimport RegisteredStores from \"./RegisteredStores\";\r\nimport { get } from \"../services/http\";\r\n\r\nexport default function BusinessTypes(props) {\r\n    const [items, setitems] = useState([]);\r\n\r\n    const [storesList, setstoresList] = useState([]);\r\n\r\n    \r\n    useEffect(() => {\r\n        init().then(console.log)\r\n    }, []);\r\n\r\n    async function init() {\r\n        try {\r\n            let data = await get('/businesses/types')\r\n            if(!data || !data.list){}\r\n            setitems(data.list || [])\r\n            let businessType = data.list[0].businessType\r\n            let stores = await get(`/suppliers/${businessType}`)\r\n            setstoresList(stores)\r\n            return {end: true}\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n        \r\n    }\r\n    const handlePressEvent = async(businessType) => {\r\n        let stores = await get(`/suppliers/${businessType}`)\r\n        setstoresList(stores)\r\n        \r\n    }\r\n     return (\r\n      <>\r\n         <ScrollView\r\n             horizontal={true}\r\n             style={styles.horizentalList}\r\n         >\r\n\r\n             {\r\n                 items.map(it => {\r\n                     return <TouchableOpacity\r\n                         key={it.businessType}\r\n                         onPress={()=>handlePressEvent(it.businessType)}\r\n                     >\r\n                         <Text\r\n                             style={styles.item}\r\n                         >{it.businessType}</Text>\r\n                     </TouchableOpacity>\r\n                 })\r\n             }\r\n         </ScrollView>\r\n\r\n             <RegisteredStores {...props}\r\n                 data={storesList}\r\n             ></RegisteredStores>\r\n           \r\n         \r\n             </>\r\n        \r\n    );\r\n}\r\n  \r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: '#fff',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    horizentalList: {\r\n      flex: 1,\r\n    //    flexDirection:'column',\r\n        // backgroundColor: 'blue',\r\n        maxHeight:50,\r\n      \r\n      \r\n    },\r\n    item: {\r\n      backgroundColor: '#4ae1fa',\r\n       justifyContent: 'center',\r\n      alignItems: 'center',\r\n      textAlign:'center',\r\n        margin: 5,\r\n      \r\n    }\r\n  });"]},"metadata":{},"sourceType":"module"}