{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\m.bilal\\\\Documents\\\\code\\\\easy-dukaan-app\\\\src\\\\screens\\\\Login.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport HomeStackScreen from \"./Home\";\nimport Constants from \"../constants\";\nimport { post } from \"../services/http\";\n\nvar LoginScreen = function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      mobileNumber = _useState2[0],\n      setmobileNumber = _useState2[1];\n\n  var onPressHandle = function onPressHandle() {\n    var result;\n    return _regeneratorRuntime.async(function onPressHandle$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n\n            if (!(!mobileNumber || mobileNumber.length < 10)) {\n              _context.next = 5;\n              break;\n            }\n\n            Alert.alert('Warning', 'Please Enter Correct Mobile Number');\n            _context.next = 14;\n            break;\n\n          case 5:\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(Constants.localStorageKeys.mobileNumber, mobileNumber));\n\n          case 7:\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(post('/users/activation', {\n              payload: {\n                mobileNumber: mobileNumber\n              }\n            }));\n\n          case 9:\n            result = _context.sent;\n            console.log(result);\n            _context.next = 13;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(Constants.localStorageKeys.isLogin, 1));\n\n          case 13:\n            navigation.navigate('Home');\n\n          case 14:\n            _context.next = 19;\n            break;\n\n          case 16:\n            _context.prev = 16;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 19:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 16]], Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, \"Enter Your Mobile Number\"), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"03015339780\",\n    onChangeText: function onChangeText(value) {\n      return setmobileNumber(value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    title: \"Send\",\n    onPress: onPressHandle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }));\n};\n\nvar LoginStack = createNativeStackNavigator();\n\nvar LoginStackScreen = function LoginStackScreen() {\n  return React.createElement(LoginStack.Navigator, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 3\n    }\n  }, React.createElement(LoginStack.Screen, {\n    name: \"Login\",\n    component: LoginScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }), React.createElement(LoginStack.Screen, {\n    name: \"Home\",\n    component: HomeStackScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }));\n};\n\nexport default LoginStackScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#fff'\n  },\n  input: {\n    width: 300,\n    borderWidth: 2,\n    borderColor: 'black',\n    margin: 10,\n    textAlign: 'center',\n    fontSize: 20\n  }\n});","map":{"version":3,"sources":["C:/Users/m.bilal/Documents/code/easy-dukaan-app/src/screens/Login.js"],"names":["React","useState","createNativeStackNavigator","AsyncStorage","HomeStackScreen","Constants","post","LoginScreen","navigation","mobileNumber","setmobileNumber","onPressHandle","length","Alert","alert","setItem","localStorageKeys","payload","result","console","log","isLogin","navigate","styles","container","input","value","LoginStack","LoginStackScreen","StyleSheet","create","flex","alignItems","justifyContent","backgroundColor","width","borderWidth","borderColor","margin","textAlign","fontSize"],"mappings":"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","sourcesContent":["\r\nimport React, {useState} from 'react';\r\nimport {\r\n  Button, StyleSheet, Text, View,\r\n  ScrollView,\r\n  TextInput,\r\n  Alert\r\n} from 'react-native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport HomeStackScreen from \"./Home\";\r\nimport Constants from \"../constants\";\r\nimport { post } from \"../services/http\";\r\n\r\nconst LoginScreen = ({ navigation }) => {\r\n  const [mobileNumber, setmobileNumber] = useState('');\r\n\r\n  const onPressHandle = async () => {\r\n    try {\r\n      if (!mobileNumber || mobileNumber.length < 10) {\r\n         Alert.alert('Warning', 'Please Enter Correct Mobile Number')\r\n      } else {\r\n        await AsyncStorage.setItem(Constants.localStorageKeys.mobileNumber, mobileNumber)\r\n      let result =  await post('/users/activation', {payload: {mobileNumber}})\r\n       console.log(result)\r\n        await AsyncStorage.setItem(Constants.localStorageKeys.isLogin, 1)\r\n        navigation.navigate('Home')\r\n      }\r\n      \r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n    return (\r\n      <View\r\n        style={styles.container}\r\n      >\r\n        <Text>Enter Your Mobile Number</Text>\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"03015339780\"\r\n          onChangeText={(value)=>setmobileNumber(value)}\r\n        ></TextInput>\r\n        <Button\r\n          title=\"Send\"\r\n        onPress={onPressHandle}\r\n        ></Button>\r\n      </View>\r\n    )\r\n}\r\n  \r\nconst LoginStack = createNativeStackNavigator();\r\n\r\n\r\nconst LoginStackScreen = () => {\r\n    return (\r\n  <LoginStack.Navigator >\r\n  \r\n          <LoginStack.Screen name=\"Login\" component={LoginScreen}></LoginStack.Screen>\r\n          <LoginStack.Screen name=\"Home\" component={HomeStackScreen}></LoginStack.Screen>\r\n  \r\n        </LoginStack.Navigator>\r\n    )\r\n}\r\n  \r\nexport default LoginStackScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    backgroundColor:'#fff'\r\n  },\r\n  input: {\r\n    width:300,\r\n    borderWidth: 2,\r\n    borderColor: 'black',\r\n    margin: 10,\r\n    textAlign: 'center',\r\n    fontSize: 20,\r\n    \r\n  }\r\n})"]},"metadata":{},"sourceType":"module"}